{
    "collab_server" : "",
    "contents" : "#\n# This is the server logic of a Shiny web application. You can run the \n# application by clicking 'Run App' above.\n#\n# Find out more about building applications with Shiny here:\n# \n#    http://shiny.rstudio.com/\n#\n\nlibrary(shiny)\nlibrary(Rfacebook)\nlibrary(xlsx)\n\n#generate facebook\nfunction(input, output) {\n  \n  # builds a reactive expression that only invalidates \n  # when the value of input$goButton becomes out of date \n\n  facebookPage <- eventReactive(input$generate, {\n    input$n\n    fb_page <- getPage(page=input$n, token=fb_oauth)\n    write.table(fb_page, \"C:/Users/maranan.ld/Documents/MSTR/EmoTector/www/mydata.xls\", sep=\"\\t\")\n  })\n  \n  output$facebookPage <- renderText({\n    facebookPage()\n  })\n  \n  output$contents <- renderTable({\n    \n    # input$file1 will be NULL initially. After the user selects\n    # and uploads a file, it will be a data frame with 'name',\n    # 'size', 'type', and 'datapath' columns. The 'datapath'\n    # column will contain the local filenames where the data can\n    # be found.\n    \n    inFile <- input$file1\n    \n    if (is.null(inFile))\n      return(NULL)\n    \n    read.csv(inFile$datapath, header=input$header, sep=input$sep, \n             quote=input$quote)\n  })\n  \n \n}\n",
    "created" : 1479956265858.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2171223538",
    "id" : "50B1C1EC",
    "lastKnownWriteTime" : 1483510217,
    "last_content_update" : 1483510217415,
    "path" : "~/MSTR/EmoTector/server.R",
    "project_path" : "server.R",
    "properties" : {
    },
    "relative_order" : 2,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}